<?xml version="1.0" ?>
<PsychoPy2experiment encoding="utf-8" version="2024.2.4">
  <Settings>
    <Param val="3" valType="str" updates="None" name="Audio latency priority"/>
    <Param val="ptb" valType="str" updates="None" name="Audio lib"/>
    <Param val="" valType="str" updates="None" name="Completed URL"/>
    <Param val="auto" valType="str" updates="None" name="Data file delimiter"/>
    <Param val="u'data/%s_%s_%s' % (expInfo['participant'], expName, expInfo['date'])" valType="code" updates="None" name="Data filename"/>
    <Param val="True" valType="bool" updates="None" name="Enable Escape"/>
    <Param val="Thank you for your patience." valType="str" updates="None" name="End Message"/>
    <Param val="{'participant': 'f&quot;{randint(0, 999999):06.0f}&quot;', 'session': '001'}" valType="code" updates="None" name="Experiment info"/>
    <Param val="True" valType="bool" updates="None" name="Force stereo"/>
    <Param val="True" valType="bool" updates="None" name="Full-screen window"/>
    <Param val="" valType="str" updates="None" name="HTML path"/>
    <Param val="" valType="str" updates="None" name="Incomplete URL"/>
    <Param val="testMonitor" valType="str" updates="None" name="Monitor"/>
    <Param val="[]" valType="list" updates="None" name="Resources"/>
    <Param val="False" valType="bool" updates="None" name="Save csv file"/>
    <Param val="False" valType="bool" updates="None" name="Save excel file"/>
    <Param val="False" valType="bool" updates="None" name="Save hdf5 file"/>
    <Param val="True" valType="bool" updates="None" name="Save log file"/>
    <Param val="True" valType="bool" updates="None" name="Save psydat file"/>
    <Param val="True" valType="bool" updates="None" name="Save wide csv file"/>
    <Param val="1" valType="num" updates="None" name="Screen"/>
    <Param val="True" valType="bool" updates="None" name="Show info dlg"/>
    <Param val="False" valType="bool" updates="None" name="Show mouse"/>
    <Param val="height" valType="str" updates="None" name="Units"/>
    <Param val="" valType="str" updates="None" name="Use version"/>
    <Param val="[1493, 933]" valType="list" updates="None" name="Window size (pixels)"/>
    <Param val="none" valType="str" updates="None" name="backgroundFit"/>
    <Param val="" valType="str" updates="None" name="backgroundImg"/>
    <Param val="avg" valType="str" updates="None" name="blendMode"/>
    <Param val="float" valType="str" updates="None" name="clockFormat"/>
    <Param val="{'thisRow.t': 'priority.CRITICAL', 'expName': 'priority.LOW'}" valType="dict" updates="None" name="colPriority"/>
    <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
    <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
    <Param val="warning" valType="code" updates="None" name="consoleLoggingLevel"/>
    <Param val="default" valType="str" updates="None" name="ecSampleRate"/>
    <Param val="100.1.1.1" valType="str" updates="None" name="elAddress"/>
    <Param val="FILTER_LEVEL_2" valType="str" updates="None" name="elDataFiltering"/>
    <Param val="FILTER_LEVEL_OFF" valType="str" updates="None" name="elLiveFiltering"/>
    <Param val="EYELINK 1000 DESKTOP" valType="str" updates="None" name="elModel"/>
    <Param val="ELLIPSE_FIT" valType="str" updates="None" name="elPupilAlgorithm"/>
    <Param val="PUPIL_AREA" valType="str" updates="None" name="elPupilMeasure"/>
    <Param val="1000" valType="num" updates="None" name="elSampleRate"/>
    <Param val="False" valType="bool" updates="None" name="elSimMode"/>
    <Param val="RIGHT_EYE" valType="str" updates="None" name="elTrackEyes"/>
    <Param val="PUPIL_CR_TRACKING" valType="str" updates="None" name="elTrackingMode"/>
    <Param val="stroop" valType="str" updates="None" name="expName"/>
    <Param val="on Sync" valType="str" updates="None" name="exportHTML"/>
    <Param val="None" valType="str" updates="None" name="eyetracker"/>
    <Param val="" valType="code" updates="None" name="frameRate"/>
    <Param val="Attempting to measure frame rate of screen, please wait..." valType="str" updates="None" name="frameRateMsg"/>
    <Param val="127.0.0.1" valType="str" updates="None" name="gpAddress"/>
    <Param val="4242" valType="num" updates="None" name="gpPort"/>
    <Param val="PsychToolbox" valType="str" updates="None" name="keyboardBackend"/>
    <Param val="info" valType="code" updates="None" name="logging level"/>
    <Param val="True" valType="bool" updates="None" name="measureFrameRate"/>
    <Param val="('MIDDLE_BUTTON',)" valType="list" updates="None" name="mgBlink"/>
    <Param val="CONTINUOUS" valType="str" updates="None" name="mgMove"/>
    <Param val="0.5" valType="num" updates="None" name="mgSaccade"/>
    <Param val="neon.local" valType="str" updates="None" name="plCompanionAddress"/>
    <Param val="8080" valType="num" updates="None" name="plCompanionPort"/>
    <Param val="True" valType="bool" updates="None" name="plCompanionRecordingEnabled"/>
    <Param val="0.6" valType="num" updates="None" name="plConfidenceThreshold"/>
    <Param val="True" valType="bool" updates="None" name="plPupilCaptureRecordingEnabled"/>
    <Param val="" valType="str" updates="None" name="plPupilCaptureRecordingLocation"/>
    <Param val="127.0.0.1" valType="str" updates="None" name="plPupilRemoteAddress"/>
    <Param val="50020" valType="num" updates="None" name="plPupilRemotePort"/>
    <Param val="1000" valType="num" updates="None" name="plPupilRemoteTimeoutMs"/>
    <Param val="False" valType="bool" updates="None" name="plPupillometryOnly"/>
    <Param val="psychopy_iohub_surface" valType="str" updates="None" name="plSurfaceName"/>
    <Param val="1" valType="code" updates="None" name="runMode"/>
    <Param val="True" valType="bool" updates="None" name="rush"/>
    <Param val="time" valType="str" updates="None" name="sortColumns"/>
    <Param val="" valType="str" updates="None" name="tbLicenseFile"/>
    <Param val="" valType="str" updates="None" name="tbModel"/>
    <Param val="60" valType="num" updates="None" name="tbSampleRate"/>
    <Param val="" valType="str" updates="None" name="tbSerialNo"/>
    <Param val="pyglet" valType="str" updates="None" name="winBackend"/>
  </Settings>
  <Routines>
    <Routine name="trial">
      <RoutineSettingsComponent name="trial" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="trial" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="5" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code_8" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="if newClock.getTime() &gt;= 900:&amp;#10;    stroop.finished = True" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="if ((newClock.getTime() &gt;= 900)) {&amp;#10;    stroop.finished = true;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_8" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="text_4" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_4" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.6" valType="code" updates="None" name="startVal"/>
        <Param val="time (s)" valType="str" updates="None" name="stopType"/>
        <Param val="5" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="•" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="text" plugin="None">
        <Param val="$textColor" valType="color" updates="set every repeat" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.10" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text" valType="code" updates="None" name="name"/>
        <Param val="1" valType="num" updates="set every repeat" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="time (s)" valType="str" updates="None" name="stopType"/>
        <Param val="0.6" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$stim1" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp" plugin="None">
        <Param val="'m','z'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="$key" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.01" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="True" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <CodeComponent name="code_4" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="show_image = False&amp;#10;next_image_trial = np.random.randint(5, 9)  # show after 5-10 trials" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="show_image = false;&amp;#10;next_image_trial = np.random.randint(5, 9);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="image_list = [&quot;allmovDist\\movDist2.mp4&quot;, &quot;allmovDist\\movDist3.mp4&quot;, &quot;allmovDist\\movDist4.mp4&quot;, &quot;allmovDist\\movDist5.mp4&quot;, &quot;allmovDist\\movDist6.mp4&quot;, &quot;allmovDist\\movDist7.mp4&quot;, &quot;allmovDist\\movDist8.mp4&quot;, &quot;allmovDist\\movDist9.mp4&quot;, &quot;allmovDist\\movDist10.mp4&quot;, &quot;allmovDist\\movDist12.mp4&quot;, &quot;allmovDist\\movDist13.mp4&quot;, &quot;allmovDist\\movDist14.mp4&quot;, &quot;allmovDist\\movDist16.mp4&quot;, &quot;allmovDist\\movDist17.mp4&quot;, &quot;allmovDist\\movDist18.mp4&quot;, &quot;allmovDist\\movDist20.mp4&quot;, &quot;allmovDist\\movDist21.mp4&quot;, &quot;allmovDist\\movDist22.mp4&quot;];&amp;#10;chosen_image = np.random.choice(image_list);&amp;#10;image_duration = 0;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="# List of image file paths&amp;#10;image_list = [&amp;#10;    &quot;allmovDist\movDist2.mp4&quot;,&amp;#10;    &quot;allmovDist\movDist3.mp4&quot;, &amp;#10;    &quot;allmovDist\movDist4.mp4&quot;,&amp;#10;    &quot;allmovDist\movDist5.mp4&quot;, &amp;#10;    &quot;allmovDist\movDist6.mp4&quot;,&amp;#10;    &quot;allmovDist\movDist7.mp4&quot;,&amp;#10;    &quot;allmovDist\movDist8.mp4&quot;,&amp;#10;    &quot;allmovDist\movDist9.mp4&quot;,&amp;#10;    &quot;allmovDist\movDist10.mp4&quot;,&amp;#10;    &quot;allmovDist\movDist12.mp4&quot;,&amp;#10;    &quot;allmovDist\movDist13.mp4&quot;,&amp;#10;    &quot;allmovDist\movDist14.mp4&quot;,&amp;#10;    &quot;allmovDist\movDist16.mp4&quot;,&amp;#10;    &quot;allmovDist\movDist17.mp4&quot;,&amp;#10;    &quot;allmovDist\movDist18.mp4&quot;,&amp;#10;    &quot;allmovDist\movDist20.mp4&quot;,&amp;#10;    &quot;allmovDist\movDist21.mp4&quot;,&amp;#10;    &quot;allmovDist\movDist22.mp4&quot;&amp;#10;]&amp;#10;# We only want to pick ONE image out of the 30&amp;#10;chosen_image = np.random.choice(image_list)&amp;#10;&amp;#10;image_duration = 0&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_4" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="code_5" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="image_list = [&quot;allmovDist\\movDist2.mp4&quot;, &quot;allmovDist\\movDist3.mp4&quot;, &quot;allmovDist\\movDist4.mp4&quot;, &quot;allmovDist\\movDist5.mp4&quot;, &quot;allmovDist\\movDist6.mp4&quot;, &quot;allmovDist\\movDist7.mp4&quot;, &quot;allmovDist\\movDist8.mp4&quot;, &quot;allmovDist\\movDist9.mp4&quot;, &quot;allmovDist\\movDist10.mp4&quot;, &quot;allmovDist\\movDist12.mp4&quot;, &quot;allmovDist\\movDist13.mp4&quot;, &quot;allmovDist\\movDist14.mp4&quot;, &quot;allmovDist\\movDist16.mp4&quot;, &quot;allmovDist\\movDist17.mp4&quot;, &quot;allmovDist\\movDist18.mp4&quot;, &quot;allmovDist\\movDist20.mp4&quot;, &quot;allmovDist\\movDist21.mp4&quot;, &quot;allmovDist\\movDist22.mp4&quot;];&amp;#10;chosen_image = np.random.choice(image_list);&amp;#10;if ((stroop.thisN === next_image_trial)) {&amp;#10;    show_image = true;&amp;#10;    image_duration = np.random.randint(1, 6);&amp;#10;} else {&amp;#10;    show_image = false;&amp;#10;    image_duration = 0;&amp;#10;}&amp;#10;randomImage.opacity = Number.parseInt(show_image);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="image_list = [&amp;#10;    &quot;allmovDist\movDist2.mp4&quot;,&amp;#10;    &quot;allmovDist\movDist3.mp4&quot;, &amp;#10;    &quot;allmovDist\movDist4.mp4&quot;,&amp;#10;    &quot;allmovDist\movDist5.mp4&quot;, &amp;#10;    &quot;allmovDist\movDist6.mp4&quot;,&amp;#10;    &quot;allmovDist\movDist7.mp4&quot;,&amp;#10;    &quot;allmovDist\movDist8.mp4&quot;,&amp;#10;    &quot;allmovDist\movDist9.mp4&quot;,&amp;#10;    &quot;allmovDist\movDist10.mp4&quot;,&amp;#10;    &quot;allmovDist\movDist12.mp4&quot;,&amp;#10;    &quot;allmovDist\movDist13.mp4&quot;,&amp;#10;    &quot;allmovDist\movDist14.mp4&quot;,&amp;#10;    &quot;allmovDist\movDist16.mp4&quot;,&amp;#10;    &quot;allmovDist\movDist17.mp4&quot;,&amp;#10;    &quot;allmovDist\movDist18.mp4&quot;,&amp;#10;    &quot;allmovDist\movDist20.mp4&quot;,&amp;#10;    &quot;allmovDist\movDist21.mp4&quot;,&amp;#10;    &quot;allmovDist\movDist22.mp4&quot;&amp;#10;]&amp;#10;&amp;#10;# We only want to pick ONE image out of the 30&amp;#10;chosen_image = np.random.choice(image_list)&amp;#10;&amp;#10;if stroop.thisN == next_image_trial:&amp;#10;    show_image = True&amp;#10;    image_duration = np.random.randint(1, 6)&amp;#10;else:&amp;#10;    show_image = False&amp;#10;    image_duration = 0&amp;#10;&amp;#10;randomImage.opacity = int(show_image)  # 1 if True, 0 if False" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_5" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="code_6" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="if (show_image) {&amp;#10;    next_image_trial = (stroop.thisN + np.random.randint(9, 14));&amp;#10;}&amp;#10;show_image = false;&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="if show_image:&amp;#10;    next_image_trial = stroop.thisN + np.random.randint(9, 14)&amp;#10;show_image = False" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_6" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <MovieComponent name="randomImage" plugin="None">
        <Param val="False" valType="bool" updates="None" name="No audio"/>
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="ffpyplayer" valType="str" updates="None" name="backend"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="False" valType="bool" updates="None" name="loop"/>
        <Param val="$chosen_image" valType="file" updates="set every repeat" name="movie"/>
        <Param val="randomImage" valType="code" updates="None" name="name"/>
        <Param val="int(show_image)" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="[np.random.uniform(-0.5, 0.5), np.random.uniform(-0.5, 0.5)]" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="0.5,0.5" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$image_duration" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="constant" name="stopWithRoutine"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="1" valType="num" updates="None" name="volume"/>
      </MovieComponent>
    </Routine>
    <Routine name="welcome">
      <RoutineSettingsComponent name="welcome" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="welcome" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="30" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code_10" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="newClock = core.Clock()" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="newClock = new util.Clock();&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="newClock.reset();&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="newClock.reset()" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_10" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="text_2" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.035" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Welcome to the Attention Seekers Stroop Task!&amp;#10;Press z for inconsistent prompts, e.g. yellow pops up with color green.&amp;#10;Press m for consistent prompts, e.g. red pops up with color red.&amp;#10;Try to get as many correct as possible in 15 mins!&amp;#10;&amp;#10;Press SPACE key to continue." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_2" plugin="None">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_2" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="thanks">
      <RoutineSettingsComponent name="thanks" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="thanks" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="30" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="text_3" plugin="None">
        <Param val="1.0000, 1.0000, 1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.035" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_3" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Thank you for participating!" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="fixation">
      <RoutineSettingsComponent name="fixation" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="-1.0000, -1.0000, -1.0000" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="fixation" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="time_fix" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="time_fix = np.random.uniform(1, 6);&amp;#10;psychoJS.experiment.addData(&quot;time_fixation&quot;, time_fix);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="time_fix = np.random.uniform(1,6)&amp;#10;thisExp.addData(&quot;time_fixation&quot;, time_fix)" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="fix_rand" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.1" valType="num" updates="constant" name="letterHeight"/>
        <Param val="fix_rand" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="time (s)" valType="str" updates="None" name="stopType"/>
        <Param val="time_fix" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="+" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
  </Routines>
  <Flow>
    <Routine name="welcome"/>
    <LoopInitiator loopType="TrialHandler" name="stroop">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[{'type': 'test', 'condition1': 'consistent', 'trialNo': 1, 'stim1': 'red', 'textColor': 'red', 'stimFormat': 'word', 'key': 'm', 'ITI': 800, 'presTime': 2000}, {'type': 'test', 'condition1': 'inconsistent', 'trialNo': 2, 'stim1': 'yellow', 'textColor': 'green', 'stimFormat': 'word', 'key': 'z', 'ITI': 800, 'presTime': 2000}, {'type': 'test', 'condition1': 'inconsistent', 'trialNo': 3, 'stim1': 'blue', 'textColor': 'red', 'stimFormat': 'word', 'key': 'z', 'ITI': 800, 'presTime': 2000}, {'type': 'test', 'condition1': 'inconsistent', 'trialNo': 4, 'stim1': 'red', 'textColor': 'green', 'stimFormat': 'word', 'key': 'z', 'ITI': 800, 'presTime': 2000}, {'type': 'test', 'condition1': 'inconsistent', 'trialNo': 5, 'stim1': 'orange', 'textColor': 'blue', 'stimFormat': 'word', 'key': 'z', 'ITI': 800, 'presTime': 2000}, {'type': 'test', 'condition1': 'inconsistent', 'trialNo': 6, 'stim1': 'red', 'textColor': 'yellow', 'stimFormat': 'word', 'key': 'z', 'ITI': 800, 'presTime': 2000}, {'type': 'test', 'condition1': 'consistent', 'trialNo': 7, 'stim1': 'green', 'textColor': 'green', 'stimFormat': 'word', 'key': 'm', 'ITI': 800, 'presTime': 2000}, {'type': 'test', 'condition1': 'inconsistent', 'trialNo': 8, 'stim1': 'black', 'textColor': 'yellow', 'stimFormat': 'word', 'key': 'z', 'ITI': 800, 'presTime': 2000}, {'type': 'test', 'condition1': 'inconsistent', 'trialNo': 9, 'stim1': 'red', 'textColor': 'blue', 'stimFormat': 'word', 'key': 'z', 'ITI': 800, 'presTime': 2000}, {'type': 'test', 'condition1': 'inconsistent', 'trialNo': 10, 'stim1': 'green', 'textColor': 'yellow', 'stimFormat': 'word', 'key': 'z', 'ITI': 800, 'presTime': 2000}, {'type': 'test', 'condition1': 'inconsistent', 'trialNo': 11, 'stim1': 'green', 'textColor': 'red', 'stimFormat': 'word', 'key': 'z', 'ITI': 800, 'presTime': 2000}, {'type': 'test', 'condition1': 'consistent', 'trialNo': 12, 'stim1': 'yellow', 'textColor': 'yellow', 'stimFormat': 'word', 'key': 'm', 'ITI': 800, 'presTime': 2000}, {'type': 'test', 'condition1': 'inconsistent', 'trialNo': 13, 'stim1': 'purple', 'textColor': 'red', 'stimFormat': 'word', 'key': 'z', 'ITI': 800, 'presTime': 2000}, {'type': 'test', 'condition1': 'inconsistent', 'trialNo': 14, 'stim1': 'yellow', 'textColor': 'blue', 'stimFormat': 'word', 'key': 'z', 'ITI': 800, 'presTime': 2000}, {'type': 'test', 'condition1': 'inconsistent', 'trialNo': 15, 'stim1': 'yellow', 'textColor': 'red', 'stimFormat': 'word', 'key': 'z', 'ITI': 800, 'presTime': 2000}, {'type': 'test', 'condition1': 'inconsistent', 'trialNo': 16, 'stim1': 'red', 'textColor': 'green', 'stimFormat': 'word', 'key': 'z', 'ITI': 800, 'presTime': 2000}, {'type': 'test', 'condition1': 'inconsistent', 'trialNo': 17, 'stim1': 'yellow', 'textColor': 'green', 'stimFormat': 'word', 'key': 'z', 'ITI': 800, 'presTime': 2000}, {'type': 'test', 'condition1': 'consistent', 'trialNo': 18, 'stim1': 'red', 'textColor': 'red', 'stimFormat': 'word', 'key': 'm', 'ITI': 800, 'presTime': 2000}, {'type': 'test', 'condition1': 'inconsistent', 'trialNo': 19, 'stim1': 'green', 'textColor': 'red', 'stimFormat': 'word', 'key': 'z', 'ITI': 800, 'presTime': 2000}, {'type': 'test', 'condition1': 'inconsistent', 'trialNo': 20, 'stim1': 'red', 'textColor': 'green', 'stimFormat': 'word', 'key': 'z', 'ITI': 800, 'presTime': 2000}, {'type': 'test', 'condition1': 'inconsistent', 'trialNo': 21, 'stim1': 'black', 'textColor': 'yellow', 'stimFormat': 'word', 'key': 'z', 'ITI': 800, 'presTime': 2000}, {'type': 'test', 'condition1': 'inconsistent', 'trialNo': 22, 'stim1': 'red', 'textColor': 'yellow', 'stimFormat': 'word', 'key': 'z', 'ITI': 800, 'presTime': 2000}, {'type': 'test', 'condition1': 'consistent', 'trialNo': 23, 'stim1': 'green', 'textColor': 'green', 'stimFormat': 'word', 'key': 'm', 'ITI': 800, 'presTime': 2000}, {'type': 'test', 'condition1': 'inconsistent', 'trialNo': 24, 'stim1': 'blue', 'textColor': 'green', 'stimFormat': 'word', 'key': 'z', 'ITI': 800, 'presTime': 2000}, {'type': 'test', 'condition1': 'inconsistent', 'trialNo': 25, 'stim1': 'red', 'textColor': 'blue', 'stimFormat': 'word', 'key': 'z', 'ITI': 800, 'presTime': 2000}, {'type': 'test', 'condition1': 'inconsistent', 'trialNo': 26, 'stim1': 'green', 'textColor': 'yellow', 'stimFormat': 'word', 'key': 'z', 'ITI': 800, 'presTime': 2000}, {'type': 'test', 'condition1': 'inconsistent', 'trialNo': 27, 'stim1': 'green', 'textColor': 'red', 'stimFormat': 'word', 'key': 'z', 'ITI': 800, 'presTime': 2000}, {'type': 'test', 'condition1': 'consistent', 'trialNo': 28, 'stim1': 'yellow', 'textColor': 'yellow', 'stimFormat': 'word', 'key': 'm', 'ITI': 800, 'presTime': 2000}, {'type': 'test', 'condition1': 'inconsistent', 'trialNo': 29, 'stim1': 'green', 'textColor': 'blue', 'stimFormat': 'word', 'key': 'z', 'ITI': 800, 'presTime': 2000}, {'type': 'test', 'condition1': 'inconsistent', 'trialNo': 30, 'stim1': 'blue', 'textColor': 'red', 'stimFormat': 'word', 'key': 'z', 'ITI': 800, 'presTime': 2000}, {'type': 'test', 'condition1': 'inconsistent', 'trialNo': 31, 'stim1': 'yellow', 'textColor': 'red', 'stimFormat': 'word', 'key': 'z', 'ITI': 800, 'presTime': 2000}, {'type': 'test', 'condition1': 'inconsistent', 'trialNo': 32, 'stim1': 'orange', 'textColor': 'green', 'stimFormat': 'word', 'key': 'z', 'ITI': 800, 'presTime': 2000}, {'type': 'test', 'condition1': 'inconsistent', 'trialNo': 33, 'stim1': 'yellow', 'textColor': 'green', 'stimFormat': 'word', 'key': 'z', 'ITI': 800, 'presTime': 2000}, {'type': 'test', 'condition1': 'consistent', 'trialNo': 34, 'stim1': 'green', 'textColor': 'green', 'stimFormat': 'word', 'key': 'm', 'ITI': 800, 'presTime': 2000}, {'type': 'test', 'condition1': 'consistent', 'trialNo': 35, 'stim1': 'red', 'textColor': 'red', 'stimFormat': 'word', 'key': 'm', 'ITI': 800, 'presTime': 2000}, {'type': 'test', 'condition1': 'consistent', 'trialNo': 36, 'stim1': 'red', 'textColor': 'red', 'stimFormat': 'word', 'key': 'm', 'ITI': 800, 'presTime': 2000}, {'type': 'test', 'condition1': 'inconsistent', 'trialNo': 37, 'stim1': 'red', 'textColor': 'green', 'stimFormat': 'word', 'key': 'z', 'ITI': 800, 'presTime': 2000}, {'type': 'test', 'condition1': 'consistent', 'trialNo': 38, 'stim1': 'blue', 'textColor': 'blue', 'stimFormat': 'word', 'key': 'm', 'ITI': 800, 'presTime': 2000}, {'type': 'test', 'condition1': 'inconsistent', 'trialNo': 39, 'stim1': 'red', 'textColor': 'yellow', 'stimFormat': 'word', 'key': 'z', 'ITI': 800, 'presTime': 2000}, {'type': 'test', 'condition1': 'consistent', 'trialNo': 40, 'stim1': 'yellow', 'textColor': 'yellow', 'stimFormat': 'word', 'key': 'm', 'ITI': 800, 'presTime': 2000}, {'type': 'test', 'condition1': 'consistent', 'trialNo': 41, 'stim1': 'green', 'textColor': 'green', 'stimFormat': 'word', 'key': 'm', 'ITI': 800, 'presTime': 2000}, {'type': 'test', 'condition1': 'inconsistent', 'trialNo': 42, 'stim1': 'green', 'textColor': 'yellow', 'stimFormat': 'word', 'key': 'z', 'ITI': 800, 'presTime': 2000}, {'type': 'test', 'condition1': 'consistent', 'trialNo': 43, 'stim1': 'green', 'textColor': 'green', 'stimFormat': 'word', 'key': 'm', 'ITI': 800, 'presTime': 2000}, {'type': 'test', 'condition1': 'inconsistent', 'trialNo': 44, 'stim1': 'green', 'textColor': 'red', 'stimFormat': 'word', 'key': 'z', 'ITI': 800, 'presTime': 2000}, {'type': 'test', 'condition1': 'consistent', 'trialNo': 45, 'stim1': 'red', 'textColor': 'red', 'stimFormat': 'word', 'key': 'm', 'ITI': 800, 'presTime': 2000}, {'type': 'test', 'condition1': 'consistent', 'trialNo': 46, 'stim1': 'yellow', 'textColor': 'yellow', 'stimFormat': 'word', 'key': 'm', 'ITI': 800, 'presTime': 2000}, {'type': 'test', 'condition1': 'consistent', 'trialNo': 47, 'stim1': 'blue', 'textColor': 'blue', 'stimFormat': 'word', 'key': 'm', 'ITI': 800, 'presTime': 2000}, {'type': 'test', 'condition1': 'inconsistent', 'trialNo': 48, 'stim1': 'yellow', 'textColor': 'red', 'stimFormat': 'word', 'key': 'z', 'ITI': 800, 'presTime': 2000}, {'type': 'test', 'condition1': 'consistent', 'trialNo': 49, 'stim1': 'yellow', 'textColor': 'yellow', 'stimFormat': 'word', 'key': 'm', 'ITI': 800, 'presTime': 2000}, {'type': 'test', 'condition1': 'inconsistent', 'trialNo': 50, 'stim1': 'yellow', 'textColor': 'green', 'stimFormat': 'word', 'key': 'z', 'ITI': 800, 'presTime': 2000}, {'type': 'test', 'condition1': 'consistent', 'trialNo': 51, 'stim1': 'red', 'textColor': 'red', 'stimFormat': 'word', 'key': 'm', 'ITI': 800, 'presTime': 2000}, {'type': 'test', 'condition1': 'inconsistent', 'trialNo': 52, 'stim1': 'red', 'textColor': 'green', 'stimFormat': 'word', 'key': 'z', 'ITI': 800, 'presTime': 2000}, {'type': 'test', 'condition1': 'inconsistent', 'trialNo': 53, 'stim1': 'red', 'textColor': 'yellow', 'stimFormat': 'word', 'key': 'z', 'ITI': 800, 'presTime': 2000}, {'type': 'test', 'condition1': 'consistent', 'trialNo': 54, 'stim1': 'green', 'textColor': 'green', 'stimFormat': 'word', 'key': 'm', 'ITI': 800, 'presTime': 2000}, {'type': 'test', 'condition1': 'inconsistent', 'trialNo': 55, 'stim1': 'green', 'textColor': 'yellow', 'stimFormat': 'word', 'key': 'z', 'ITI': 800, 'presTime': 2000}, {'type': 'test', 'condition1': 'inconsistent', 'trialNo': 56, 'stim1': 'green', 'textColor': 'red', 'stimFormat': 'word', 'key': 'z', 'ITI': 800, 'presTime': 2000}, {'type': 'test', 'condition1': 'consistent', 'trialNo': 57, 'stim1': 'yellow', 'textColor': 'yellow', 'stimFormat': 'word', 'key': 'm', 'ITI': 800, 'presTime': 2000}, {'type': 'test', 'condition1': 'inconsistent', 'trialNo': 58, 'stim1': 'yellow', 'textColor': 'red', 'stimFormat': 'word', 'key': 'z', 'ITI': 800, 'presTime': 2000}, {'type': 'test', 'condition1': 'inconsistent', 'trialNo': 59, 'stim1': 'yellow', 'textColor': 'green', 'stimFormat': 'word', 'key': 'z', 'ITI': 800, 'presTime': 2000}]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="strooplist.xlsx" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="36" valType="num"/>
      <Param name="name" updates="None" val="stroop" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="trial"/>
    <Routine name="fixation"/>
    <LoopTerminator name="stroop"/>
    <Routine name="thanks"/>
  </Flow>
</PsychoPy2experiment>
